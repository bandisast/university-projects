#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
// FUNCTION_BLOCK CRANE
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,IN_SENSOR)
  __DECLARE_VAR(BOOL,IN_MIDLIM)
  __DECLARE_VAR(BOOL,IN_MOVEX)
  __DECLARE_VAR(BOOL,IN_MOVEZ)
  __DECLARE_VAR(BOOL,IN_RIGHTLIM)
  __DECLARE_VAR(BOOL,IN_LEFTLIM)
  __DECLARE_VAR(BOOL,ISLID)
  __DECLARE_VAR(BOOL,OUT_LIFT)
  __DECLARE_VAR(BOOL,OUT_LEFT)
  __DECLARE_VAR(BOOL,OUT_RIGHT)
  __DECLARE_VAR(INT,OUT_TARGETPOSITION)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(INT,WORD_TO_SHIFT)
  __DECLARE_VAR(BOOL,TIMEIN)
  __DECLARE_VAR(TIME,TIMEPT)
  TON TIMERON;
  __DECLARE_VAR(BOOL,TIMEQ)
  __DECLARE_VAR(BOOL,LOADING_CONV_LOADED)
  __DECLARE_VAR(BOOL,STACKER_BUSY)
  __DECLARE_VAR(BOOL,LEFT_CONV_WAIT)
  __DECLARE_VAR(INT,DESTINATION)
  __DECLARE_VAR(TIME,TIMEET)

} CRANE;

void CRANE_init__(CRANE *data__, BOOL retain);
// Code part
void CRANE_body__(CRANE *data__);
// FUNCTION_BLOCK LIDS
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,LIDTYPE)
  __DECLARE_VAR(BOOL,SIGNAL)

  // FB private variables - TEMP, private and located variables

} LIDS;

void LIDS_init__(LIDS *data__, BOOL retain);
// Code part
void LIDS_body__(LIDS *data__);
// PROGRAM PROGRAM0
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,INPUT_CONVEYOR)
  __DECLARE_VAR(BOOL,START_BUTTON)
  __DECLARE_VAR(BOOL,STOP_BUTTON)
  __DECLARE_VAR(BOOL,MACHINING_EXIT_SENSOR)
  __DECLARE_VAR(BOOL,CRANE_ISMOVINGX)
  __DECLARE_VAR(BOOL,CRANE_ISMOVINGZ)
  __DECLARE_VAR(BOOL,CRANE_ISLEFTLIM)
  __DECLARE_VAR(BOOL,CRANE_ISMIDLIM)
  __DECLARE_VAR(BOOL,CRANE_ISRIGHTLIM)
  __DECLARE_VAR(BOOL,CRANE_SENSOR)
  __DECLARE_VAR(BOOL,DOOR_SENSOR)
  __DECLARE_VAR(BOOL,EMERGENCY_STOP)
  __DECLARE_VAR(BOOL,MACHINING_START)
  __DECLARE_VAR(BOOL,MACHINING_PRODUCELIDS)
  __DECLARE_VAR(BOOL,TRANSFER_CONVEYOR)
  __DECLARE_VAR(BOOL,EXIT_CONVEYOR)
  __DECLARE_VAR(BOOL,EMITTER_EXIT)
  __DECLARE_VAR(BOOL,CRANE_LIFT)
  __DECLARE_VAR(BOOL,CRANE_LEFT)
  __DECLARE_VAR(BOOL,CRANE_RIGHT)
  __DECLARE_VAR(BOOL,CRANE_LOADING_CONVEYOR)
  __DECLARE_VAR(BOOL,START_LIGHT)
  __DECLARE_VAR(BOOL,STOP_LIGHT)
  __DECLARE_VAR(BOOL,WARNING_LIGHT)
  __DECLARE_VAR(BOOL,SIREN)
  __DECLARE_VAR(BOOL,MACHINING_STOP)
  __DECLARE_VAR(BOOL,MACHINING_RESET)
  __DECLARE_VAR(INT,MACHINING_ISBUSY)
  __DECLARE_VAR(INT,POTENTIOMETER)
  __DECLARE_VAR(INT,CRANE_POSITION)
  __DECLARE_VAR(INT,INPUT_CONVEYOR_ALG)
  __DECLARE_VAR(INT,CURRENT_BASE)
  __DECLARE_VAR(INT,CURRENT_LID)
  __DECLARE_VAR(INT,TOTAL_BASE)
  __DECLARE_VAR(INT,TOTAL_LID)
  SR SR0;
  CTU CTU0;
  LIDS LIDS0;
  SR SR1;
  CTU CTU1;
  CRANE CRANE0;
  TON TON0;
  SR SR2;
  TP TP0;
  CTU CTU2;
  CTU CTU3;
  __DECLARE_VAR(BOOL,MOVE18_ENO)
  __DECLARE_VAR(INT,MOVE18_OUT)
  __DECLARE_VAR(BOOL,MOVE65_ENO)
  __DECLARE_VAR(INT,MOVE65_OUT)
  __DECLARE_VAR(BOOL,INT_TO_BOOL23_OUT)
  R_TRIG R_TRIG1;
  __DECLARE_VAR(BOOL,EQ15_OUT)
  __DECLARE_VAR(BOOL,AND62_OUT)
  __DECLARE_VAR(BOOL,AND19_OUT)
  F_TRIG F_TRIG1;
  __DECLARE_VAR(BOOL,INT_TO_BOOL14_OUT)
  R_TRIG R_TRIG2;
  __DECLARE_VAR(BOOL,EQ4_OUT)
  __DECLARE_VAR(INT,ADD105_OUT)
  __DECLARE_VAR(BOOL,MOVE82_ENO)
  __DECLARE_VAR(INT,MOVE82_OUT)
  __DECLARE_VAR(INT,ADD103_OUT)
  __DECLARE_VAR(BOOL,MOVE68_ENO)
  __DECLARE_VAR(INT,MOVE68_OUT)
  __DECLARE_VAR(INT,MOVE50_OUT)
  F_TRIG F_TRIG2;
  R_TRIG R_TRIG3;
  __DECLARE_VAR(INT,MOVE100_OUT)
  R_TRIG R_TRIG4;
  R_TRIG R_TRIG5;
  __DECLARE_VAR(INT,MOVE93_OUT)

} PROGRAM0;

void PROGRAM0_init__(PROGRAM0 *data__, BOOL retain);
// Code part
void PROGRAM0_body__(PROGRAM0 *data__);
#endif //__POUS_H
